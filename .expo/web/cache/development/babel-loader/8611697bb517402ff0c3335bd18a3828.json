{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport styles from \"./styles\";\nimport moment from \"moment-timezone\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\nvar months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\nvar WeatherItem = function WeatherItem(_ref) {\n  var title = _ref.title,\n      value = _ref.value,\n      unit = _ref.unit;\n  return _jsxs(View, {\n    style: styles.weatherItem,\n    children: [_jsx(Text, {\n      style: styles.weatherItemTitle,\n      children: title\n    }), _jsxs(Text, {\n      style: styles.weatherItemTitle,\n      children: [value, unit]\n    })]\n  });\n};\n\nvar CurrentWeather = function CurrentWeather(_ref2) {\n  var current = _ref2.current,\n      lat = _ref2.lat,\n      lon = _ref2.lon,\n      timezone = _ref2.timezone;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      date = _useState2[0],\n      setDate = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      time = _useState4[0],\n      setTime = _useState4[1];\n\n  useEffect(function () {\n    setInterval(function () {\n      var time = new Date();\n      var month = time.getMonth();\n      var date = time.getDate();\n      var day = time.getDay();\n      var hour = time.getHours();\n      var hoursIn12HrFormat = hour >= 13 ? hour % 12 : hour;\n      var minutes = time.getMinutes();\n      var ampm = hour >= 12 ? \"pm\" : \"am\";\n      setTime((hoursIn12HrFormat < 10 ? \"0\" + hoursIn12HrFormat : hoursIn12HrFormat) + \":\" + (minutes < 10 ? \"0\" + minutes : minutes) + ampm);\n      setDate(days[day] + \", \" + date + \" \" + months[month]);\n    }, 1000);\n  }, []);\n  return _jsxs(View, {\n    style: styles.backgroundContainer,\n    children: [_jsx(ImageBackground, {\n      source: require(\"../../assets/background.png\"),\n      style: styles.image\n    }), _jsxs(View, {\n      style: styles.mainInfo,\n      children: [_jsx(WeatherItem, {\n        title: \"Humidity\",\n        value: current.humidity,\n        unit: \"%\"\n      }), _jsx(Text, {\n        style: styles.temp,\n        children: \"60\"\n      }), _jsxs(View, {\n        style: styles.currentReadings,\n        children: [_jsx(Text, {\n          style: styles.humidity,\n          children: \"30%\"\n        }), _jsx(Text, {\n          style: styles.windSpeed,\n          children: \"5 MPH\"\n        })]\n      })]\n    })]\n  });\n};\n\nexport default CurrentWeather;","map":{"version":3,"sources":["C:/Users/wngar/Documents/Projects/TinyStationV1/TinyStationV1/components/CurrentWeather/index.js"],"names":["React","useEffect","useState","styles","moment","days","months","WeatherItem","title","value","unit","weatherItem","weatherItemTitle","CurrentWeather","current","lat","lon","timezone","date","setDate","time","setTime","setInterval","Date","month","getMonth","getDate","day","getDay","hour","getHours","hoursIn12HrFormat","minutes","getMinutes","ampm","backgroundContainer","require","image","mainInfo","humidity","temp","currentReadings","windSpeed"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { View, Text, ImageBackground } from \"react-native\";\r\nimport styles from \"./styles\";\r\nimport moment from \"moment-timezone\";\r\nconst days = [\r\n  \"Sunday\",\r\n  \"Monday\",\r\n  \"Tuesday\",\r\n  \"Wednesday\",\r\n  \"Thursday\",\r\n  \"Friday\",\r\n  \"Saturday\",\r\n];\r\nconst months = [\r\n  \"Jan\",\r\n  \"Feb\",\r\n  \"Mar\",\r\n  \"Apr\",\r\n  \"May\",\r\n  \"Jun\",\r\n  \"Jul\",\r\n  \"Aug\",\r\n  \"Sep\",\r\n  \"Oct\",\r\n  \"Nov\",\r\n  \"Dec\",\r\n];\r\n\r\n// import Container from \"react-bootstrap/Container\";\r\nconst WeatherItem = ({ title, value, unit }) => {\r\n  return (\r\n    <View style={styles.weatherItem}>\r\n      <Text style={styles.weatherItemTitle}>{title}</Text>\r\n      <Text style={styles.weatherItemTitle}>\r\n        {value}\r\n        {unit}\r\n      </Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst CurrentWeather = ({ current, lat, lon, timezone }) => {\r\n  const [date, setDate] = useState(\"\");\r\n  const [time, setTime] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      const time = new Date();\r\n      const month = time.getMonth();\r\n      const date = time.getDate();\r\n      const day = time.getDay();\r\n      const hour = time.getHours();\r\n      const hoursIn12HrFormat = hour >= 13 ? hour % 12 : hour;\r\n      const minutes = time.getMinutes();\r\n      const ampm = hour >= 12 ? \"pm\" : \"am\";\r\n      setTime(\r\n        (hoursIn12HrFormat < 10 ? \"0\" + hoursIn12HrFormat : hoursIn12HrFormat) +\r\n          \":\" +\r\n          (minutes < 10 ? \"0\" + minutes : minutes) +\r\n          ampm\r\n      );\r\n\r\n      setDate(days[day] + \", \" + date + \" \" + months[month]);\r\n    }, 1000);\r\n  }, []);\r\n  // console.log(current.humidity);\r\n  return (\r\n    <View style={styles.backgroundContainer}>\r\n      <ImageBackground\r\n        source={require(\"../../assets/background.png\")}\r\n        style={styles.image}\r\n      />\r\n      <View style={styles.mainInfo}>\r\n        {/* <Text style={styles.time}>5:00pm</Text>\r\n        <Text style={styles.date}>March 27th 2022</Text> */}\r\n        <WeatherItem title=\"Humidity\" value={current.humidity} unit=\"%\" />\r\n        <Text style={styles.temp}>60</Text>\r\n        <View style={styles.currentReadings}>\r\n          <Text style={styles.humidity}>30%</Text>\r\n          <Text style={styles.windSpeed}>5 MPH</Text>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\n// const DateTime = () => {\r\n//   return <View></View>;\r\n// };\r\n\r\nexport default CurrentWeather;\r\n"]},"metadata":{},"sourceType":"module"}